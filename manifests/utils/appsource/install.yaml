# This is an auto-generated file. DO NOT EDIT
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/name: argocd-appsource-controller
    app.kubernetes.io/part-of: argocd-appsource
  name: appsources.argoproj.io
spec:
  group: argoproj.io
  names:
    kind: AppSource
    listKind: AppSourceList
    plural: appsources
    singular: appsource
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: AppSource is the Schema for the appsources API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ApplicationSource contains all required information about
              the source of an application
            properties:
              chart:
                description: Chart is a Helm chart name, and must be specified for
                  applications sourced from a Helm repo.
                type: string
              directory:
                description: Directory holds path/directory specific options
                properties:
                  exclude:
                    description: Exclude contains a glob pattern to match paths against
                      that should be explicitly excluded from being used during manifest
                      generation
                    type: string
                  include:
                    description: Include contains a glob pattern to match paths against
                      that should be explicitly included during manifest generation
                    type: string
                  jsonnet:
                    description: Jsonnet holds options specific to Jsonnet
                    properties:
                      extVars:
                        description: ExtVars is a list of Jsonnet External Variables
                        items:
                          description: JsonnetVar represents a variable to be passed
                            to jsonnet during manifest generation
                          properties:
                            code:
                              type: boolean
                            name:
                              type: string
                            value:
                              type: string
                          required:
                          - name
                          - value
                          type: object
                        type: array
                      libs:
                        description: Additional library search dirs
                        items:
                          type: string
                        type: array
                      tlas:
                        description: TLAS is a list of Jsonnet Top-level Arguments
                        items:
                          description: JsonnetVar represents a variable to be passed
                            to jsonnet during manifest generation
                          properties:
                            code:
                              type: boolean
                            name:
                              type: string
                            value:
                              type: string
                          required:
                          - name
                          - value
                          type: object
                        type: array
                    type: object
                  recurse:
                    description: Recurse specifies whether to scan a directory recursively
                      for manifests
                    type: boolean
                type: object
              helm:
                description: Helm holds helm specific options
                properties:
                  fileParameters:
                    description: FileParameters are file parameters to the helm template
                    items:
                      description: HelmFileParameter is a file parameter that's passed
                        to helm template during manifest generation
                      properties:
                        name:
                          description: Name is the name of the Helm parameter
                          type: string
                        path:
                          description: Path is the path to the file containing the
                            values for the Helm parameter
                          type: string
                      type: object
                    type: array
                  parameters:
                    description: Parameters is a list of Helm parameters which are
                      passed to the helm template command upon manifest generation
                    items:
                      description: HelmParameter is a parameter that's passed to helm
                        template during manifest generation
                      properties:
                        forceString:
                          description: ForceString determines whether to tell Helm
                            to interpret booleans and numbers as strings
                          type: boolean
                        name:
                          description: Name is the name of the Helm parameter
                          type: string
                        value:
                          description: Value is the value for the Helm parameter
                          type: string
                      type: object
                    type: array
                  releaseName:
                    description: ReleaseName is the Helm release name to use. If omitted
                      it will use the application name
                    type: string
                  valueFiles:
                    description: ValuesFiles is a list of Helm value files to use
                      when generating a template
                    items:
                      type: string
                    type: array
                  values:
                    description: Values specifies Helm values to be passed to helm
                      template, typically defined as a block
                    type: string
                  version:
                    description: Version is the Helm version to use for templating
                      (either "2" or "3")
                    type: string
                type: object
              ksonnet:
                description: Ksonnet holds ksonnet specific options
                properties:
                  environment:
                    description: Environment is a ksonnet application environment
                      name
                    type: string
                  parameters:
                    description: Parameters are a list of ksonnet component parameter
                      override values
                    items:
                      description: KsonnetParameter is a ksonnet component parameter
                      properties:
                        component:
                          type: string
                        name:
                          type: string
                        value:
                          type: string
                      required:
                      - name
                      - value
                      type: object
                    type: array
                type: object
              kustomize:
                description: Kustomize holds kustomize specific options
                properties:
                  commonAnnotations:
                    additionalProperties:
                      type: string
                    description: CommonAnnotations is a list of additional annotations
                      to add to rendered manifests
                    type: object
                  commonLabels:
                    additionalProperties:
                      type: string
                    description: CommonLabels is a list of additional labels to add
                      to rendered manifests
                    type: object
                  images:
                    description: Images is a list of Kustomize image override specifications
                    items:
                      description: KustomizeImage represents a Kustomize image definition
                        in the format [old_image_name=]<image_name>:<image_tag>
                      type: string
                    type: array
                  namePrefix:
                    description: NamePrefix is a prefix appended to resources for
                      Kustomize apps
                    type: string
                  nameSuffix:
                    description: NameSuffix is a suffix appended to resources for
                      Kustomize apps
                    type: string
                  version:
                    description: Version controls which version of Kustomize to use
                      for rendering manifests
                    type: string
                type: object
              path:
                description: Path is a directory path within the Git repository, and
                  is only valid for applications sourced from Git.
                type: string
              plugin:
                description: ConfigManagementPlugin holds config management plugin
                  specific options
                properties:
                  env:
                    description: Env is a list of environment variable entries
                    items:
                      description: EnvEntry represents an entry in the application's
                        environment
                      properties:
                        name:
                          description: Name is the name of the variable, usually expressed
                            in uppercase
                          type: string
                        value:
                          description: Value is the value of the variable
                          type: string
                      required:
                      - name
                      - value
                      type: object
                    type: array
                  name:
                    type: string
                type: object
              repoURL:
                description: RepoURL is the URL to the repository (Git or Helm) that
                  contains the application manifests
                type: string
              targetRevision:
                description: TargetRevision defines the revision of the source to
                  sync the application to. In case of Git, this can be commit, tag,
                  or branch. If omitted, will equal to HEAD. In case of Helm, this
                  is a semver tag for the Chart's version.
                type: string
            required:
            - repoURL
            type: object
          status:
            description: AppSourceStatus defines the observed state of AppSource
            properties:
              conditions:
                description: Conditions is a list of observed AppSource conditions
                  TODO Rename to Conditions TODO Iterate through conditions and upsert
                  the condition
                items:
                  description: AppSourceCondition holds the latest information about
                    the AppSource conditions
                  properties:
                    message:
                      description: Message contains human-readable message indicating
                        details about condition
                      type: string
                    observedAt:
                      description: LastTransitionTime is the time the condition was
                        last observed
                      format: date-time
                      type: string
                    status:
                      description: Boolean status describing if the conditon is currently
                        true
                      type: string
                    type:
                      description: Type is an application condition type
                      type: string
                  required:
                  - message
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/name: argocd-appsource-controller
    app.kubernetes.io/part-of: argocd-appsource
  name: argocd-appsource-controller
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/name: argocd-appsource-controller
    app.kubernetes.io/part-of: argocd-appsource
  name: argocd-appsource-controller
rules:
- apiGroups:
  - argoproj.io
  resources:
  - appsources
  - appsources/finalizers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - argoproj.io
  resources:
  - appsources/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  - configmaps
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  - extensions
  resources:
  - deployments
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - clusters
  verbs:
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/name: argocd-appsource-controller
    app.kubernetes.io/part-of: argocd-appsource
  name: argocd-appsource-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: argocd-appsource-controller
subjects:
- kind: ServiceAccount
  name: argocd-appsource-controller
  namespace: argocd
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/name: argocd-appsource-controller
    app.kubernetes.io/part-of: argocd-appsource
  name: argocd-appsource-controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/name: argocd-appsource-controller
      app.kubernetes.io/part-of: argocd-appsource
  template:
    metadata:
      labels:
        app.kubernetes.io/component: controller
        app.kubernetes.io/name: argocd-appsource-controller
        app.kubernetes.io/part-of: argocd-appsource
    spec:
      containers:
      - command:
        - /manager
        env:
        - name: ARGOCD_TOKEN
          valueFrom:
            secretKeyRef:
              key: argocd-token
              name: argocd-appsource-secret
        image: quay.io/argoprojlabs/argocd-appsource:latest
        imagePullPolicy: Always
        name: manager
      serviceAccountName: argocd-appsource-controller

